{
  "baitSet missing": {
    "status": "Baitset Missing",
    "meaning": "Baitset field does not have a value assigned in LIMS",
    "actionItem": "PMs contact IGO to fix and redeliver, let SMILE know once FASTQs are available by emailing them or clicking \"Mark delivery\" button",
    "responsibleParty": "IGO"
  },
  "fastQs missing": {
    "status": "FASTQs Missing",
    "meaning": "FASTQs for sample were not sent to SMILE from IGO",
    "actionItem": "PMs contact IGO to fix and redeliver, let SMILE know once FASTQs are available by emailing them or clicking \"Mark delivery\" button",
    "responsibleParty": "IGO"
  },
  "igoComplete false": {
    "status": "IGOComplete False",
    "meaning": "IGOComplete checkbox was not ticked in LIMS",
    "actionItem": "PMs contact IGO to fix and redeliver, let SMILE know once FASTQs are available by emailing them or clicking \"Mark delivery\" button",
    "responsibleParty": "IGO"
  },
  "sample type abbreviation could not resolve based on specimenType, sampleOrigin, or sampleClass": {
    "status": "Sample type abbreviation not resolved",
    "meaning": "Metadata required for CMO Sample Name generation is missing or incomplete",
    "actionItem": "PMs update metadata in SMILE PM dashboard",
    "responsibleParty": "PMs"
  },
  "recipe missing": {
    "status": "Recipe Missing",
    "meaning": "IGOComplete checkbox was not ticked in LIMS",
    "actionItem": "PMs contact IGO to fix and redeliver, let SMILE know once FASTQs are available by emailing them or clicking \"Mark delivery\" button",
    "responsibleParty": "IGO"
  },
  "normalizedPatientId missing from \"cmoSampleIdFields\"": {
    "status": "NormalizedPatientId Missing",
    "meaning": "IGOComplete checkbox was not ticked in LIMS",
    "actionItem": "PMs contact IGO to fix and redeliver, let SMILE know once FASTQs are available by emailing them or clicking \"Mark delivery\" button",
    "responsibleParty": "IGO"
  },
  "specimenType (sampleClass) invalid": {
    "status": "Specimen Type (Sample Class) Invalid",
    "meaning": "The value for the IGO Specimen Type (SMILE Sample Class) is not recognized",
    "actionItem": "PMs update Specimen Type in SMILE PM dashboard",
    "responsibleParty": "PMs"
  },
  "sampleType missing from \"cmoSampleIdFields\"": {
    "status": "Sample Type missing from \"cmoSampleIdFields\"",
    "meaning": "The label generator will fall back onto this field if the IGO Specimen Type (SMILE Sample Class) is missing or is not a recognized value. This field is auto-generated by IGO as part of the sample metadata",
    "actionItem": "PMs update Specimen Type in SMILE PM dashboard",
    "responsibleParty": "PMs"
  },
  "sampleType invalid \"sampleType\" from \"cmoSampleIdFields\"": {
    "status": "Sample Type Invalid in \"cmoSampleIdFields\"",
    "meaning": "The label generator will fall back onto this field if the IGO Specimen Type (SMILE Sample Class) is missing or is not a recognized value. This field is auto-generated by IGO as part of the sample metadata",
    "actionItem": "PMs update Specimen Type in SMILE PM dashboard",
    "responsibleParty": "PMs"
  },
  "investigatorSampleId missing": {
    "status": "InvestigatorSampleId Missing",
    "meaning": "InvestigatorSampleId field does not have a value assigned in LIMS",
    "actionItem": "PMs update InvestigatorSampleId in SMILE PM dashboard",
    "responsibleParty": "PMs"
  }
}
